import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

//https://www.acmicpc.net/problem/1931


public class Main {
	
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub

		Scanner sc = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
//		StringTokenizer st = new StringTokenizer(br.readLine());
		
//		int n = Integer.parseInt(st.nextToken());
//		int k = Integer.parseInt(st.nextToken());
		
		int N = sc.nextInt();		
		/*
		  time[][0] 은 시작시점을 의미 
		  time[][1] 은 종료시점을 의미 
		*/
		int[][] time = new int[N][2];
		
		
		for(int i = 0; i < N; i++) {
			time[i][0] = sc.nextInt();	// 시작시간 
			time[i][1] = sc.nextInt();	// 종료시간 
		}
		
		//종료시간 기준으로 빨리끝나는 것 부터 정렬하여
		//가장 빨리 끝나는 회의 부터 진행
		
		/*
		for(int i = time.length-1; i > 0; i--) {	//버블정렬 - my coding(버블정렬 구글 참고)
			for(int j = 0; j < i; j++) {				
				if(time[j][1] > time[j+1][1]) {
					int[] temp = time[j];
					time[j] = time[j+1];
					time[j+1] = temp;
				}
				else if(time[j][1] == time[j+1][1]) {
					if(time[j][0] > time[j+1][0]) {
						int[] temp = time[j];
						time[j] = time[j+1];
						time[j+1] = temp;
					}
				}
			}			
		}		
		*/
		
		//Comparator을 이용하여 배열 정렬
		Arrays.sort(time, new Comparator<int[]>() {			
			@Override
			public int compare(int[] o1, int[] o2) {
				
				// 종료시간이 같을 경우 시작시간이 빠른순으로 정렬해야한다.  
				if(o1[1] == o2[1]) {
					return o1[0] - o2[0];
				}				
				return o1[1] - o2[1];
			} 
		});

//		for(int i = 0; i < time.length; i++) {	//배열 시험출력
//			for(int j = 0; j < 2; j++) {
//				System.out.print(time[i][j]+" ");
//			}
//			System.out.println();
//		}
				
		int count = 0;
		int prev_end_time = 0;
		
		for(int i = 0; i < N; i++) {			
			// 직전 종료시간이 다음 회의 시작 시간보다 작거나 같다면 갱신 
			if(prev_end_time <= time[i][0]) {
				prev_end_time = time[i][1];
				count++;
			}
		}
		
		System.out.println(count);
		
		
//		String arr[] = str.split(" ");
//		bw.flush();
//		bw.close();

	}

}
